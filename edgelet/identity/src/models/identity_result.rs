/* 
 * Identity Service API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-02-02
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IdentityResult {
  /// The identity type.
  #[serde(rename = "type")]
  _type: String,
  #[serde(rename = "spec", skip_serializing_if="Option::is_none")]
  spec: Option<crate::models::IdentitySpec>
}

impl IdentityResult {
  pub fn new(_type: String) -> IdentityResult {
    IdentityResult {
      _type: _type,
      spec: None
    }
  }

  pub fn set_type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with_type(mut self, _type: String) -> IdentityResult {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


  pub fn set_spec(&mut self, spec: crate::models::IdentitySpec) {
    self.spec = Some(spec);
  }

  pub fn with_spec(mut self, spec: crate::models::IdentitySpec) -> IdentityResult {
    self.spec = Some(spec);
    self
  }

  pub fn spec(&self) -> Option<&crate::models::IdentitySpec> {
    self.spec.as_ref()
  }

  pub fn reset_spec(&mut self) {
    self.spec = None;
  }

}



